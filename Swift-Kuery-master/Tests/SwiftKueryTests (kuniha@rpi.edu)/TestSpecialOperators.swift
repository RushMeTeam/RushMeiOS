/**
* Copyright IBM Corporation 2016, 2017
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

import Foundation

import XCTest

@testable import SwiftKuery

// This test was generated by Scripts/testSpecialOperators.sh.
class TestSpecialOperators: XCTestCase {

    static var allTests: [(String, (TestSpecialOperators) -> () throws -> Void)] {
        return [
            ("testSpecialOperators", testSpecialOperators),
        ]
    }

    class MyTable: Table {
        let a = Column("a")
        let b = Column("b")

        let tableName = "table"
    }

    func testSpecialOperators() {
        let t = MyTable()
        let connection = createConnection()
        var s = Select(from: t)
        var kuery = ""
        var queryWhere = ""
        var queryHaving = ""

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a).notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a).like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a).notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a).like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("swift-kuery".notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'swift-kuery' NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'swift-kuery' NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("swift-kuery".like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'swift-kuery' LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'swift-kuery' LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("swift-kuery".notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'swift-kuery' NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'swift-kuery' NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("swift-kuery".like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'swift-kuery' LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'swift-kuery' LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("swift-kuery".notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'swift-kuery' NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'swift-kuery' NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("swift-kuery".like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'swift-kuery' LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'swift-kuery' LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("swift-kuery".notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'swift-kuery' NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'swift-kuery' NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("swift-kuery".like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'swift-kuery' LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'swift-kuery' LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter().notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter().like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").notLike("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first NOT LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first NOT LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").like("%kuery%"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first LIKE '%kuery%' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first LIKE '%kuery%'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first NOT LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first NOT LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first LIKE ?1 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first LIKE ?1"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter().notLike(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 NOT LIKE ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 NOT LIKE ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter().like(Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 LIKE ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 LIKE ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween(2.71828, and: 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn(2.71828, 3.14159))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a).notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a).notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.between(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.notBetween(true, and: false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true NOT BETWEEN true AND false GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true NOT BETWEEN true AND false"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.in(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.notIn(true, false))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true NOT IN (true, false) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true NOT IN (true, false)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".between("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".notBetween("apple", and: "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' NOT BETWEEN 'apple' AND 'peach' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' NOT BETWEEN 'apple' AND 'peach'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".in("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".notIn("apple", "peach"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' NOT IN ('apple', 'peach') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' NOT IN ('apple', 'peach')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".between(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".notBetween(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' NOT BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' NOT BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".in(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana".notIn(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' NOT IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' NOT IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".between(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".notBetween(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' NOT BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' NOT BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".in(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana".notIn(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' NOT IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' NOT IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.between(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.notBetween(3, and: 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 NOT BETWEEN 3 AND 6 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 NOT BETWEEN 3 AND 6"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.in(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.notIn(3, 6))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 NOT IN (3, 6) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 NOT IN (3, 6)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(4.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 4 NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 4 NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.between(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.notBetween(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 NOT BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 NOT BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.in(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(4.notIn(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 4 NOT IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 4 NOT IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).between(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).notBetween(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).in(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).notIn(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).between(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).notBetween(Float(2.71828), and: Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 NOT BETWEEN 2.71828 AND 3.14159 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 NOT BETWEEN 2.71828 AND 3.14159"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).in(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).notIn(Float(2.71828), Float(3.14159)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 NOT IN (2.71828, 3.14159) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 NOT IN (2.71828, 3.14159)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.between(3.14159, and: 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 BETWEEN 3.14159 AND 2.71828 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 BETWEEN 3.14159 AND 2.71828"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.notBetween(3.14159, and: 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 NOT BETWEEN 3.14159 AND 2.71828 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 NOT BETWEEN 3.14159 AND 2.71828"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.in(3.14159, 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 IN (3.14159, 2.71828) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 IN (3.14159, 2.71828)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.notIn(3.14159, 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 NOT IN (3.14159, 2.71828) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 NOT IN (3.14159, 2.71828)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.between(3.14159, and: 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 BETWEEN 3.14159 AND 2.71828 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 BETWEEN 3.14159 AND 2.71828"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.notBetween(3.14159, and: 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 NOT BETWEEN 3.14159 AND 2.71828 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 NOT BETWEEN 3.14159 AND 2.71828"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.in(3.14159, 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 IN (3.14159, 2.71828) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 IN (3.14159, 2.71828)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.notIn(3.14159, 2.71828))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 NOT IN (3.14159, 2.71828) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 NOT IN (3.14159, 2.71828)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(2.71828).notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 2.71828 NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 2.71828 NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).between(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).notBetween(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 NOT BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 NOT BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).in(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(2.71828).notIn(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 2.71828 NOT IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 2.71828 NOT IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.between(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.notBetween(Parameter("first"), and: Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 NOT BETWEEN @first AND @second GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 NOT BETWEEN @first AND @second"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.in(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(3.001.notIn(Parameter("first"), Parameter("second")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 3.001 NOT IN (@first, @second) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 3.001 NOT IN (@first, @second)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.between(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.notBetween(Parameter(), and: Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 NOT BETWEEN ?1 AND ?2 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 NOT BETWEEN ?1 AND ?2"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.in(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(3.008.notIn(Parameter(), Parameter()))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 3.008 NOT IN (?1, ?2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 3.008 NOT IN (?1, ?2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").between(Parameter("second"), and: Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first BETWEEN @second AND @third GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first BETWEEN @second AND @third"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").notBetween(Parameter("second"), and: Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first NOT BETWEEN @second AND @third GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first NOT BETWEEN @second AND @third"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").in(Parameter("second"), Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first IN (@second, @third) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first IN (@second, @third)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter("first").notIn(Parameter("second"), Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE @first NOT IN (@second, @third) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE @first NOT IN (@second, @third)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").between(Parameter("second"), and: Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first BETWEEN @second AND @third GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first BETWEEN @second AND @third"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").notBetween(Parameter("second"), and: Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first NOT BETWEEN @second AND @third GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first NOT BETWEEN @second AND @third"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").in(Parameter("second"), Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first IN (@second, @third) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first IN (@second, @third)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter("first").notIn(Parameter("second"), Parameter("third")))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING @first NOT IN (@second, @third) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING @first NOT IN (@second, @third)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000).between(Date(timeIntervalSince1970: 50000), and: Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000).notBetween(Date(timeIntervalSince1970: 50000), and: Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' NOT BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' NOT BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000).in(Date(timeIntervalSince1970: 50000), Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000).notIn(Date(timeIntervalSince1970: 50000), Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' NOT IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' NOT IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000).between(Date(timeIntervalSince1970: 50000), and: Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000).notBetween(Date(timeIntervalSince1970: 50000), and: Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' NOT BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' NOT BETWEEN '1970-01-01 13:53:20 +0000' AND '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000).in(Date(timeIntervalSince1970: 50000), Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000).notIn(Date(timeIntervalSince1970: 50000), Date(timeIntervalSince1970: 0)))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' NOT IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000') GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' NOT IN ('1970-01-01 13:53:20 +0000', '1970-01-01 00:00:00 +0000')"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
  }
}
