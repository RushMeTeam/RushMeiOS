/**
* Copyright IBM Corporation 2016, 2017
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

import Foundation

import XCTest

@testable import SwiftKuery

// This test was generated by Scripts/testSimpleOperators.sh.
class TestFilterAndHaving: XCTestCase {

    static var allTests: [(String, (TestFilterAndHaving) -> () throws -> Void)] {
        return [
            ("testSimpleOperators", testSimpleOperators),
        ]
    }

    class MyTable: Table {
        let a = Column("a")
        let b = Column("b")

        let tableName = "table"
    }

    class MyTable2: Table {
        let c = Column("c")
        let tableName = "table2"
    }

    func testSimpleOperators() {
        let t = MyTable()
        let t2 = MyTable2()
        let connection = createConnection()
        var s = Select(from: t)
        var kuery = ""
        var queryWhere = ""
        var queryHaving = ""


        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) == "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) = 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) = 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" == lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' = LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' = LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) == round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) = ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) = ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) == 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) = 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) = 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 == len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 = LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 = LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b == 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b = 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b = 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) == Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) = 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) = 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) == len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 = LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 = LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b == Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b = 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b = 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) == 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) = 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) = 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 == len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 = LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 = LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b == 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b = 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b = 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) == Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) = @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) = @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() == len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 = LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 = LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() == Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() = '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() = '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) == now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' = NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' = NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) == "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) = 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) = 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" == last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' = LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' = LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) == last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) = LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) = LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) == 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) = 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) = 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 == sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 = SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 = SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b == 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b = 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b = 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) == Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) = 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) = 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) == max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 = MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 = MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b == Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b = 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b = 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) == 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) = 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) = 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 == max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 = MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 = MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b == 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b = 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b = 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 == t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 = table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 = table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) == Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) = @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) = @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() == min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 = MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 = MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() == Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 = (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 = (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) == Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) = '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) = '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) == last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' = LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' = LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) >= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) >= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) >= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" >= lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' >= LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' >= LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) >= round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) >= ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) >= ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) >= 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) >= 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) >= 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 >= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 >= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 >= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b >= 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b >= 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b >= 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) >= Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) >= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) >= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) >= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 >= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 >= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b >= Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b >= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b >= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) >= 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) >= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) >= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 >= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 >= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 >= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b >= 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b >= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b >= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) >= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) >= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) >= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() >= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 >= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 >= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() >= Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() >= '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() >= '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) >= now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' >= NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' >= NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a >= Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a >= '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a >= '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) >= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) >= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) >= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" >= last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' >= LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' >= LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) >= last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) >= LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) >= LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) >= 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) >= 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) >= 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 >= sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 >= SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 >= SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b >= 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b >= 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b >= 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) >= Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) >= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) >= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) >= max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 >= MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 >= MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b >= Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b >= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b >= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) >= 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) >= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) >= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 >= max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 >= MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 >= MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b >= 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b >= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b >= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 >= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 >= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 >= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) >= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) >= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) >= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() >= min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 >= MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 >= MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() >= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 >= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 >= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) >= Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) >= '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) >= '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) >= last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' >= LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' >= LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a >= Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a >= '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a >= '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) >= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' >= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' >= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) > "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) > 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) > 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" > lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' > LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' > LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) > round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) > ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) > ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) > 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) > 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) > 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 > len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 > LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 > LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b > 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b > 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b > 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) > Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) > 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) > 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) > len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 > LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 > LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b > Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b > 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b > 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) > 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) > 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) > 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 > len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 > LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 > LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b > 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b > 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b > 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) > Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) > @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) > @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() > len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 > LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 > LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() > Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() > '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() > '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) > now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' > NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' > NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a > Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a > '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a > '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) > "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) > 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) > 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" > last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' > LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' > LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) > last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) > LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) > LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) > 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) > 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) > 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 > sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 > SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 > SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b > 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b > 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b > 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) > Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) > 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) > 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) > max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 > MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 > MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b > Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b > 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b > 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) > 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) > 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) > 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 > max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 > MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 > MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b > 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b > 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b > 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 > t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 > table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 > table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) > Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) > @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) > @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() > min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 > MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 > MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() > Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 > (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 > (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) > Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) > '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) > '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) > last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' > LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' > LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a > Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a > '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a > '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) > t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' > table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' > table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) <= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) <= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) <= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" <= lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <= LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <= LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) <= round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <= ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <= ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) <= 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <= 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <= 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 <= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 <= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 <= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b <= 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <= 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <= 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) <= Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) <= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 <= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 <= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b <= Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) <= 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 <= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 <= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 <= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b <= 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) <= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() <= len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <= LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <= LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() <= Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() <= '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() <= '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) <= now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' <= NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' <= NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a <= Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <= '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <= '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) <= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) <= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) <= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" <= last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <= LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <= LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) <= last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) <= LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) <= LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) <= 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) <= 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) <= 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 <= sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 <= SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 <= SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b <= 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <= 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <= 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) <= Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) <= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) <= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) <= max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 <= MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 <= MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b <= Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) <= 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) <= 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) <= 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 <= max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 <= MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 <= MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b <= 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <= 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <= 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 <= t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 <= table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 <= table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) <= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) <= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) <= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() <= min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <= MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <= MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() <= Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <= (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <= (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) <= Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) <= '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) <= '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) <= last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' <= LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' <= LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a <= Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <= '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <= '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) <= t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' <= table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' <= table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) < "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) < 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) < 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" < lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' < LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' < LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) < round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) < ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) < ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) < 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) < 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) < 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 < len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 < LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 < LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b < 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b < 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b < 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) < Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) < 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) < 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) < len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 < LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 < LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b < Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b < 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b < 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) < 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) < 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) < 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 < len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 < LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 < LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b < 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b < 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b < 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) < Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) < @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) < @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() < len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 < LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 < LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() < Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() < '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() < '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) < now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' < NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' < NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a < Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a < '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a < '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) < "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) < 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) < 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" < last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' < LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' < LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) < last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) < LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) < LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) < 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) < 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) < 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 < sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 < SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 < SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b < 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b < 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b < 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) < Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) < 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) < 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) < max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 < MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 < MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b < Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b < 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b < 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) < 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) < 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) < 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 < max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 < MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 < MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b < 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b < 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b < 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 < t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 < table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 < table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) < Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) < @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) < @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() < min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 < MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 < MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() < Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 < (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 < (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) < Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) < '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) < '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) < last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' < LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' < LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a < Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a < '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a < '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) < t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' < table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' < table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) != "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) <> 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) <> 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" != lcase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <> LCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <> LCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) != round(t.b, to: 2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <> ROUND(table.b, 2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <> ROUND(table.b, 2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(mid(t.b, start: 3, length: 2) != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE MID(table.b, 3, 2) <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE MID(table.b, 3, 2) <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) != 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <> 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <> 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5 != len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5 <> LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5 <> LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b != 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <> 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <> 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18 != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) != Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <> 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <> 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(5.8) != len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 <> LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 <> LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b != Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <> 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <> 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(-18.789) != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) != 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <> 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <> 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(5.8 != len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 5.8 <> LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 5.8 <> LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.b != 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.b <> 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.b <> 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(-18.789 != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE -18.789 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE -18.789 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(len(t.a) != Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LEN(table.a) <> @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LEN(table.a) <> @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() != len(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <> LEN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <> LEN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(ucase(t.a) != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE UCASE(table.a) <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE UCASE(table.a) <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where("banana" != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 'banana' <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 'banana' <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7 != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Float(7.2) != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(7.2 != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE 7.2 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE 7.2 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Parameter() != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE ?1 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE ?1 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(now() != Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE NOW() <> '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE NOW() <> '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 0) != now())
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 00:00:00 +0000' <> NOW() GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 00:00:00 +0000' <> NOW()"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(Date(timeIntervalSince1970: 50000) != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE '1970-01-01 13:53:20 +0000' <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE '1970-01-01 13:53:20 +0000' <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) != "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) <> 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) <> 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" != last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <> LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <> LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != "banana")
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> 'banana' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> 'banana'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) != last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) <> LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) <> LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != last(t.b))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> LAST(table.b) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> LAST(table.b)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.b) != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.b) <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.b) <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(sum(t.a) != 5)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING SUM(table.a) <> 5 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING SUM(table.a) <> 5"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5 != sum(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5 <> SUM(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5 <> SUM(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b != 178)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <> 178 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <> 178"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18 != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) != Float(5.8))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) <> 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) <> 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(5.8) != max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 <> MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 <> MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b != Float(178.9))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <> 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <> 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(-18.789) != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(max(t.a) != 5.8)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MAX(table.a) <> 5.8 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MAX(table.a) <> 5.8"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(5.8 != max(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 5.8 <> MAX(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 5.8 <> MAX(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.b != 178.9)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.b <> 178.9 GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.b <> 178.9"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(-18.789 != t.b)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING -18.789 <> table.b GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING -18.789 <> table.b"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(min(t.a) != Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING MIN(table.a) <> @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING MIN(table.a) <> @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() != min(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <> MIN(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <> MIN(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != Parameter("param"))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> @param GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> @param"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(avg(t.a) != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING AVG(table.a) <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING AVG(table.a) <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having("banana" != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 'banana' <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 'banana' <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7 != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Float(7.2) != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(7.2 != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING 7.2 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING 7.2 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Parameter() != Select(t2.c, from: t2))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING ?1 <> (SELECT table2.c FROM table2) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING ?1 <> (SELECT table2.c FROM table2)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(last(t.a) != Date(timeIntervalSince1970: 0))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING LAST(table.a) <> '1970-01-01 00:00:00 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING LAST(table.a) <> '1970-01-01 00:00:00 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 0) != last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 00:00:00 +0000' <> LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 00:00:00 +0000' <> LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != Date(timeIntervalSince1970: 10000))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> '1970-01-01 02:46:40 +0000' GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> '1970-01-01 02:46:40 +0000'"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(Date(timeIntervalSince1970: 50000) != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING '1970-01-01 13:53:20 +0000' <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING '1970-01-01 13:53:20 +0000' <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) == true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) = true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) = true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(false == ucase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE false = UCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE false = UCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a == true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a = true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a = true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) == true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) = true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) = true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(false == last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING false = LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING false = LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a == true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a = true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a = true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true == t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true = table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true = table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(lcase(t.a) != true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE LCASE(table.a) <> true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE LCASE(table.a) <> true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(false != ucase(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE false <> UCASE(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE false <> UCASE(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(t.a != true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE table.a <> true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE table.a <> true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .where(true != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table WHERE true <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a WHERE true <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(first(t.a) != true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING FIRST(table.a) <> true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING FIRST(table.a) <> true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(false != last(t.a))
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING false <> LAST(table.a) GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING false <> LAST(table.a)"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(t.a != true)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING table.a <> true GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING table.a <> true"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")

        s = Select(t.a, from: t)
            .group(by: t.a)
            .having(true != t.a)
        kuery = connection.descriptionOf(query: s)
        queryWhere = "SELECT table.a FROM table HAVING true <> table.a GROUP BY table.a"
        queryHaving = "SELECT table.a FROM table GROUP BY table.a HAVING true <> table.a"
        XCTAssert(kuery == queryWhere || kuery == queryHaving,
                    "\nError in query construction: \n\(kuery) \ninstead of \n\(queryWhere) \nor instead of \n\(queryHaving)")
  }
}
